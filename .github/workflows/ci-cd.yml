name: mock CI/CD

on:
  workflow_dispatch: 
  push:
    branches:
      - 'feature/*'
    paths:
      - alpha/**
      - beta/**
      - gamma/**
  pull_request:
    branches:
      - 'release/*'
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT: ${{ steps.set_env.outputs.ENVIRONMENT }}  # Output environment for other jobs to access
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch full history

    - name: Set environment based on the branch or PR
      id: set_env
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          BRANCH="${{ github.head_ref }}"
        else
          BRANCH="${{ github.ref_name }}"
        fi

        if [[ "$BRANCH" == feature/* || "$BRANCH" == bugfix/* ]]; then
          ENVIRONMENT="dev"
        elif [[ "$BRANCH" == release/* ]]; then
          ENVIRONMENT="uat"
        elif [[ "$BRANCH" == main ]]; then
          ENVIRONMENT="prod"
        else
          echo "Unknown branch, exiting"
          exit 1
        fi
        echo "environment is set to $ENVIRONMENT"
        echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
        echo "::set-output name=ENVIRONMENT::$ENVIRONMENT"  # Output the environment for future jobs

    - name: Show selected environment
      run: echo "Deployment environment is $ENVIRONMENT"

    - name: Find the first commit of the branch
      run: |
        FIRST_COMMIT=$(git rev-list --boundary HEAD...origin/main | grep "^-" | head -n 1 | sed 's/^-//')
        echo "FIRST_COMMIT=$FIRST_COMMIT" >> $GITHUB_ENV

    - name: List all modified files in the branch
      id: changed_files
      run: |
        echo "The following files were modified in this branch:"
        MODIFIED_FILES=$(git diff --name-only $FIRST_COMMIT ${{ github.sha }})
        echo "$MODIFIED_FILES"
        echo "$MODIFIED_FILES" | tr '\n' ',' > files_list.txt
        echo "MODIFIED_FILES=$(cat files_list.txt)" >> $GITHUB_ENV

    - name: Zip the modified files
      run: |
        for file in $(echo $MODIFIED_FILES | tr ',' '\n'); do
          zip -r modified_files.zip "$file"
        done

    - name: Upload artifact with environment name
      uses: actions/upload-artifact@v3
      with:
        name: modified-files-archive-${{ env.ENVIRONMENT }}
        path: modified_files.zip

  download_artifact:
    needs: build  # Ensure this job runs after build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact with environment name
      uses: actions/download-artifact@v3
      with:
        name: modified-files-archive-${{ needs.build.outputs.ENVIRONMENT }}  # Use environment name only
        path: downloaded_files

    - name: Extract and list downloaded files
      run: |
        unzip downloaded_files/modified_files.zip -d extracted_files
        ls extracted_files
